# LOCAL settings, specific to current deployment
# this file should *NOT* be checked into version control

import os
BASE_DIR = os.path.dirname(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.6/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
DEV_ENV = True
TEMPLATE_DEBUG = True

INTERNAL_IPS = ['127.0.0.1', 'localhost']

ALLOWED_HOSTS = ['localhost']

# users who should get automated django error emails
ADMINS = (
    # ('Your Name', 'your_email@domain.com'),
)

MANAGERS = ADMINS
EMAIL_SUBJECT_PREFIX = '[Readux] '  # prefix for email subjects

# Set to True if you want the beta warning banner displayed on the site (e.g., for QA)
ENABLE_BETA_WARNING = False

# SECURITY WARNING: keep the secret key use d in production secret!
# Generate a new key here: http://www.miniwebtool.com/django-secret-key-generator/
SECRET_KEY = ''

# Database
# https://docs.djangoproject.com/en/1.6/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Directory where uploaded images should be stored
# NOTE: in QA/Prod this should be *outside* fabric deploy directory,
# so it can be preserved across deploys
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Temporary folder for upload
UPLOAD_TO = os.path.join(BASE_DIR, 'media/upload')

# LDAP login settings.
AUTH_LDAP_SERVER = 'ldaps://ldap.co'
AUTH_LDAP_BASE_USER = ''           # DN of the  base LDAP user (e.g., 'uid=foo,ou=bar,o=emory.edu')
AUTH_LDAP_BASE_PASS = ''           # password for that user
AUTH_LDAP_SEARCH_SUFFIX = ''
AUTH_LDAP_SEARCH_FILTER = '(uid=%s)'
AUTH_LDAP_CHECK_SERVER_CERT = False  # set to False to skip server cert verification (TESTING ONLY)
AUTH_LDAP_CA_CERT_PATH = ''        # full path to CA cert bundle
#AUTH_LDAP_CA_CERT_PATH = '/usr/share/ssl/certs/ca-bundle.crt'        # full path to CA cert bundle
#AUTH_LDAP_CA_CERT_PATH = ''        # full path to CA cert bundle

# configure which IP addresses are allowed to access the index data service
EUL_INDEXER_ALLOWED_IPS = []

# Solr index that will be used for searching
SOLR_SERVER_URL = "http://server.name:8983/solr/readux/"
# path to Solr cert if running under HTTPS and cert is not auto-loaded
# SOLR_CA_CERT_PATH = ''
# disable SSL validation - DO NOT use this in production!
# SOLR_DISABLE_CERT_CHECK = False

# Fedora Repository settings
FEDORA_ROOT = 'https://localhost:8443/fedora/'
# FEDORA_PIDSPACE = 'readux'
# NOTE: should be configured with a limited access guest account
FEDORA_USER = 'guest'
FEDORA_PASSWORD = 'guest'
# fedora user with access to manage content; used for ingest scripts etc.
FEDORA_MANAGEMENT_USER = 'fedoraAdmin'
FEDORA_MANAGEMENT_PASSWORD = 'fedoraAdmin'
# use this to explicitly configure a test pidspace; by default, uses pidspace-test
# FEDORA_TEST_PIDSPACE = 'testme'
FEDORA_TEST_ROOT = 'https://localhost:8543/fedora/'
# FEDORA_TEST_USER = 'fedoraAdmin'
# FEDORA_TEST_PASSWORD = 'fedoraAdmin'

# pidman PID management
PIDMAN_HOST = '' # web root of pid manager
PIDMAN_USER = ''
PIDMAN_PASSWORD = ''
# PIDMAN_DOMAIN = '' # default domain (e.g., for creating pids)

# URL to the digitization workflow api, e.g. http://my.server.co/digwf_api/
DIGITIZATION_WORKFLOW_API = ''

# Logging
# https://docs.djangoproject.com/en/1.6/topics/logging/
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'basic': {
            'format': '[%(asctime)s] %(levelname)s:%(name)s::%(message)s',
            'datefmt': '%d/%b/%Y %H:%M:%S',
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'django.utils.log.NullHandler',
        },
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'basic'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
            'include_html': True
        },
    },
    'loggers': {
        'django': {
            'handlers': ['null'],
            'propagate': True,
            'level': 'INFO',
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'eulfedora': {
            'handlers': ['console'],
            'level': 'INFO',
        }

    }
}
